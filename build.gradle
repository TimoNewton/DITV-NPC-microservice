apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: "org.hidetake.swagger.generator"

group = 'org.prankersize'
version = '1.0.0'

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.4.2"
    }
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = "ditv-npcs"
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

validateSwagger{
    inputFile = file('src/main/resources/swagger.yaml')
}

generateSwaggerCode{
    language = "spring"
    inputFile = file("src/main/resources/swagger.yaml")
    configFile = file("src/main/resources/swagger_codegen_options.json")
    components = ['models','apis']
}

jar {
    baseName = 'ditv-npc-micro-service'
    version =  '0.1.0'
}

dependencies {
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile("org.springframework.boot:spring-boot-starter-web")
    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.2.2'
    compile 'io.swagger:swagger-annotations:1.5.8'
    compile "io.springfox:springfox-swagger2:2.7.0"
    compile "io.springfox:springfox-swagger-ui:2.7.0"
}
